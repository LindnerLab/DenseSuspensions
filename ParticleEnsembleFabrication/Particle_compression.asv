function [Psmall, Plarge] = Particle_compression(Psmall, Plarge, Rsmall, Rlarge, timestep, Vg)
%     Psmall = [0.1,0.1;0.075,0.25];
%     Plarge = [0.2,0.2];
%     timestep = 0.1;
%     Vg = 0.1;

    Nsmall = size(Psmall,1);
    Nlarge = size(Plarge,1);
    Nparticles = Nsmall + Nlarge;

    for i = 1:Nparticles
        if i <= Nsmall
            P(i) = Particle(Psmall(i,1), Psmall(i,2), Rsmall, Vg);
        else
            P(i) = Particle(Plarge(i-Nsmall,1), Plarge(i-Nsmall,2), Rlarge, Vg);
        end
    end

    count = 0;

    while count < 1000
        for i = 1:Nparticles
            UpdatePosition(P(i), timestep);
            IsOnBoundary(P(i), ChannelW);
            UpdatedV(P(i), P, i);

            clf;
            viscircles([[P(1:2).x]', [P(1:2).y]'],ones(2,1)*P(1).r);
            hold on;
            viscircles([P(3).x, P(3).y],P(3).r);

            xlim([0 1]);
            ylim([0 1]);
        end

        count = count + 1;
    end
    
    for i
end
